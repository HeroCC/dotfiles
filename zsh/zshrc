# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

if [[ -r "${ZINIT_MODULE_PATH:=${XDG_DATA_HOME:-${HOME}/.local/share}/zinit/module/Src}/zdharma_continuum/zinit.so" ]]; then
  # Automatically compile `source` usages -- use after `zinit module build`
  module_path+=( "$ZINIT_MODULE_PATH" )
  zmodload zdharma_continuum/zinit
fi

[[ -z "$SSH_CONNECTION" && ! "$TERMINAL_EMULATOR" =~ "JetBrains-JediTerm" ]] && ZSH_TMUX_AUTOSTART="true"
if [[ -z "$TMUX" && "$ZSH_TMUX_AUTOSTART" -eq "true" ]] && (( $+commands[tmux] )); then
  # Only reattach to disconnected tmux sessions, otherwise open a new one
  ZSH_TMUX_DEFAULT_SESSION_NAME="$(tmux list-sessions -F '#{?session_attached,,#{session_name}}' 2>/dev/null | grep -v '^$' | head -1)"
  [ -z "$ZSH_TMUX_DEFAULT_SESSION_NAME" ] && ZSH_TMUX_AUTOCONNECT="false"
fi

# Add Plugins
source "$HOME/.zsh/zinit/zinit.zsh"

while read line; do 
  zinit snippet OMZ::lib/${line}
done <<EOLIBS
git.zsh
key-bindings.zsh
grep.zsh
completion.zsh
EOLIBS

while read line; do
  zinit snippet OMZ::plugins/${line}
done <<EOPLUGINS
brew
magic-enter
EOPLUGINS
zinit svn is-snippet for OMZP::tmux
zinit has'pyenv-virtualenv-init' atclone'pyenv virtualenv-init - > pyenv-venv.zsh' atpull'%atclone' pick'pyenv-venv.zsh' nocompile'!' id-as'pyenv-venv' for @zdharma-continuum/null

while read line; do
  zinit ice wait lucid
  zinit snippet OMZ::plugins/${line}
done <<EOPLUGINS
command-not-found
colored-man-pages
extract
git
EOPLUGINS

zinit depth"1" atload'zinit is-snippet for $HOME/.zsh/themes/p10k.zsh' for romkatv/powerlevel10k

if (( $+commands[fzf] )); then
  zinit lucid wait is-snippet for OMZ::plugins/fzf
  zinit lucid wait for Aloxaf/fzf-tab
fi

zinit lucid wait blockf for zsh-users/zsh-completions
zinit lucid wait for agkozak/zsh-z
zinit lucid wait pack for ls_colors
zinit lucid wait has'thefuck' for OMZ::plugins/thefuck
zinit lucid wait atinit"zicompinit; zicdreplay" for zdharma-continuum/fast-syntax-highlighting
zinit lucid wait atload'!_zsh_autosuggest_start' for zsh-users/zsh-autosuggestions

# Source all the configs
while read line; do
  zinit lucid is-snippet for $line
done <<-EOPLUGINS
$HOME/.zsh/history.zsh
$HOME/.zsh/functions.zsh
$HOME/.zsh/aliases.zsh
$HOME/.zsh/exports.zsh
EOPLUGINS
zinit lucid if'[ -e "$HOME/.zsh/local.zsh" ]' is-snippet for ~/.zsh/local.zsh
